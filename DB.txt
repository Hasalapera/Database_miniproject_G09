
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Student Table
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE Students (
    Student_ID VARCHAR(6) PRIMARY KEY,
    Stu_FName VARCHAR(50),
    Stu_LName VARCHAR(50),
    Stu_Dob DATE,
    Stu_Address VARCHAR(100),
    Stu_Email VARCHAR(100),
    Stu_Phone_No VARCHAR(10),
    Stu_Enrollment_Date DATE,
    Status VARCHAR(10), -- Proper, Repeat, Suspended
    Stu_Dep_ID CHAR(3)
);



INSERT INTO Students
(Student_ID,Stu_FName,Stu_LName,Stu_Dob,Stu_Address,Stu_Email,Stu_Phone_No,Stu_Enrollment_Date,Status,Stu_Dep_ID)
VALUES
('TG0001','Sadeepa','Dinakara','2002-11-14','Galle','sadeepadinakara@gmail.com','0764674356','2022-09-02','Proper','D01'),
('TG0002','Gihan','Kaveesha','2002-07-23','Galle','gihankaveesha@gmail.com','0756435263','2022-09-02','Proper','D01'),
('TG0003','Hasala','Shehan','2001-04-21','Colombo','hasalashehan@gmail.com','0778654396','2021-09-15','Proper','D01'),
('TG0004','Kavindu','Dilshan','2001-09-04','Galle','kavindudilshan@gmail.com','0783254961','2021-09-15','Proper','D01'),
('TG0005','Yasith','Dananjaya','2001-04-02','Rathnapura','yasithdananjaya@gmail.com','0712357902','2021-09-15','Proper','D02'),
('TG0006','Mithun','Madupriya','2001-08-12','Nuwara','mithunmadupriya@gmail.com','0749457243','2021-09-15','Proper','D02'),
('TG0007','Harsha','Kumara','2003-06-28','Colombo','harshakumara@gmail.com','0782348765','2023-09-04','Proper','D02'),
('TG0008','Ashen','Bandara','2002-02-14','Colombo','ashenbandara@gmail.com','0745083452','2022-09-02','Repeat','D03'),
('TG0009','Kasun','Rajapaksha','2003-04-24','Matara','kasunrajapaksha@gmail.com','0716358292','2023-09-04','Repeat','D02');


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Courses Table
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE Courses(
    Course_Code VARCHAR(07) PRIMARY KEY NOT NULL,
    Course_Name VARCHAR(100),
    Credits INT,
    Course_Type VARCHAR(10), -- Theory/Practical/Both
    Lecturer_ID CHAR(04),
    Course_Dep_ID CHAR(03)
    );


    INSERT INTO Courses
(Course_Code,Course_Name,Credits,Course_Type,Lecturer_ID,Course_Dep_ID)
VALUES
('ICT001','DataBase Management System',6,'T/P','L001','D01'),
('ICT002','Computer Network',2,'T/P','L002','D01'),
('ENT001','Electronic Technology',3,'T/P','L003','D02'),
('ENT002','AutoMobile',2,'P','L004','D02'),
('ENG001','English',2,'T','L005','D04'),
('MTH001','Mathematics',3,'T','L006','D04'),
('MNG001','Management',2,'T','L007','D04'),
('BST001',)



--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Student_Course Table
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE Student_Course(
    StudentID VARCHAR(6),
    CourseCode VARCHAR(7)
);


INSERT INTO Student_Course
(Student_ID,Course_Code)
VALUES
('TG0001','ICT001')
('TG0001','ICT002')
('TG0001','ENG001')
('TG0001','MTH001')
('TG0002','ICT001')
('TG0002','ICT002')
('TG0002','ENG001')
('TG0002','MTH001');


--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Attendence Table
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE Attendence(
    Attendence_ID VARCHAR(5) PRIMARY KEY,
    Count_Of_Attendence INT,
    Student_ID VARCHAR(6),
    Course_Code VARCHAR(7)
);



INSERT INTO Attendence
(Attendence_ID,Count_Of_Attendence,Student_ID,Course_Code)
VALUES
('AT001',09,'TG0001','ICT001')
('AT002',08,'TG0001','ICT002');




----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Quiz Assignment Mark Table
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE Final_Marks(
    QA_Student_ID VARCHAR(6),
    QA_Course_Code VARCHAR(7),
    End_Exam INT(3),
    Mid_Exam INT(3),
    Ass_01 INT(3),
    Ass_02 INT(3),
    Quiz_01 INT(3),
    Quiz_02 INT(3),
    Quiz_03 INT(3),
    Max_Q1 INT(3),
    Max_Q2 INT(3)
);

INSERT INTO Final_Marks
(QA_Student_ID, QA_Course_Code,End_Exam,Mid_Exam,Ass_01,Ass_02,Quiz_01,Quiz_02,Quiz_03)
VALUES
('TG0001','ICT001',80,75,60,65,75,90,100),
('TG0001','ICT002',75,70,55,60,70,95,95);


---------------------------------------------------------------------------------------------------------------------------------------------------

// Gihan PROCEDURES


// PROCEDURE FOR SELECT MAX TWO QUIZES

CREATE PROCEDURE CalculateMaxQuizMarks()
BEGIN
    -- Update each row with the two highest quiz marks
    UPDATE Final_Marks
    SET Max_Q1 = CASE
                    WHEN Quiz_01 >= Quiz_02 AND Quiz_01 >= Quiz_03 THEN Quiz_01
                    WHEN Quiz_02 >= Quiz_01 AND Quiz_02 >= Quiz_03 THEN Quiz_02
                    ELSE Quiz_03
                 END,
        Max_Q2 = CASE
                    WHEN Quiz_01 >= Quiz_02 AND Quiz_01 >= Quiz_03 THEN GREATEST(Quiz_02, Quiz_03)
                    WHEN Quiz_02 >= Quiz_01 AND Quiz_02 >= Quiz_03 THEN GREATEST(Quiz_01, Quiz_03)
                    ELSE GREATEST(Quiz_01, Quiz_02)
                 END;
END;



// Gihan Views 


// View for get semester final results

CREATE VIEW Semester_Final_View AS
SELECT 
    QA_Student_ID AS Student_ID, 
    QA_Course_Code AS Course_Code, 
    (End_Exam * 0.6) + 
    (Mid_Exam * 0.2) + 
    (Ass_01 * 0.05) + 
    (Ass_02 * 0.05) + 
    (Max_Q1 * 0.05) + 
    (Max_Q2 * 0.05) AS Semester_Final_Marks
FROM Final_Marks;

--------------------------------------------------------------------------------------------------------------------------------------------------------

//Calling PROCEDURES

CALL CalculateMaxQuizMarks();


//Calling Views

SELECT * FROM Semester_Final_View;
